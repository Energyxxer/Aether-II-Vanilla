@on compile
@require aether:crafting/recipes

define objective cc
define objective open_ct minecraft.custom:minecraft.open_enderchest
define objective ct_page
define objective old_head_rot

var DataBanks = {
    Empty: coordinates<94 2 94>
}

var breakingTool = item<diamond_axe{ae:{drop_contents:true}}>

define function setup {
    @tag load
    positioned ${DataBanks.Empty} unless block ~ ~ ~ shulker_box setblock ~ ~ ~ shulker_box
}

var getDisplayName = function(itm) {
    do if(itm.itemTag != null) {
        var tag = (itm.tag).toDictionary()
        do if(tag != null && tag.display != null && tag.display.Name != null) {
            return Text.parse(tag.display.Name)
        }
    }
    var prefix = "item."
    do if(Block.exists((string)itm.itemType)) {
        eval prefix = "block."
    }
    return new text_component({"translate": prefix + ((string)itm.itemType).replace(":",".")})
}

define function setup_page {
    replaceitem entity @s enderchest.0 iron_hoe{Unbreakable:1b,Damage:1}
    replaceitem entity @s enderchest.8 iron_hoe{Unbreakable:1b,Damage:1}
    replaceitem entity @s enderchest.9 iron_hoe{Unbreakable:1b,Damage:3}
    replaceitem entity @s enderchest.17 iron_hoe{Unbreakable:1b,Damage:4}
    replaceitem entity @s enderchest.18 iron_hoe{Unbreakable:1b,Damage:1}
    replaceitem entity @s enderchest.26 iron_hoe{Unbreakable:1b,Damage:1}
}

var recipeId = 0
var pageNum = 0
var slotNum = 1
var instantiations = []
var interactions = []
for(recipe in recipes) {
    do if(slotNum >= 27) {
        eval slotNum -= 27
        eval pageNum += 1
    }
    
    eval recipe.validation = (resource) ("aether:crafting/recipes/validation/" + (string)recipeId)
    eval recipe.instantiation = (resource) ("aether:crafting/recipes/instantiation/" + (string)recipeId)
    eval recipe.interaction = (resource) ("aether:crafting/recipes/interaction/" + (string)recipeId)
    
    do if(pageNum >= instantiations.length) {
        eval instantiations.add([])
        eval interactions.add([])
    }
    eval instantiations[pageNum].add(recipe.instantiation)
    eval interactions[pageNum].add(recipe.interaction)
    
    define function ${recipe.validation} {
        set AVAILABLE -> cc = 1
        for(material in recipe.materials) {
            if score AVAILABLE cc matches 1.. store result score TEMP cc clear @s ${material.material} 0
            if score AVAILABLE cc matches 1.. unless score TEMP cc matches ${new int_range(material.count, null)} set AVAILABLE -> cc = 0
        }
    }
    
    define function ${recipe.instantiation} {
        
        var materialIndex = 0
        for(material in recipe.materials) {
            store result score TEMP cc clear @s ${material.material} 0
            if score TEMP cc matches ${new int_range(material.count, null)} /${"tag @s add has_item_" + materialIndex}
            eval materialIndex += 1
        }
        
        var i = 0
        for(i = Math.pow(2, materialIndex) - 1; i >= 0; i -= 1) {
            
            var selector = "@s["
            
            var Lore = []
            
            eval Lore.add(new text_component())
            eval Lore.add(text_component<{"text":"Materials","color":"gray","italic":false}>)
        
            var d = 0
            for(material in recipe.materials) {
                var icon = material.icon
                do if(icon == null) eval icon = " "
                var countstr = (string) material.count
                do if(material.count == 1) eval countstr = " "
                var disabledColor = "dark_gray"
                do if(material.dark == true) eval disabledColor = "gray"
                
                eval Lore.add(new text_component())
                do if((i & Math.pow(2, d)) != 0) {
                    eval Lore.add(new text_component(
                        [
                            {text: "  " + icon + "\uF804", color: "white", italic: false},
                            {"text": countstr, color: "white"},
                            [
                                {"text": " ", "color": "green", "italic": true},
                                getDisplayName(material.material),
                                {"text":" ✔", italic: false}
                            ]
                        ]
                    ))
                    eval selector += "tag=has_item_" + d + ","
                } else {
                    eval Lore.add(new text_component(
                        [
                            {text: "  " + icon + "\uF804", color: disabledColor, italic: false},
                            {"text":countstr,color:"white"},
                            [
                                {"text":" ","color":"dark_red","italic":true},
                                getDisplayName(material.material),
                                {"text":" ✖", italic: false}
                            ]
                        ]
                    ))
                    eval selector += "tag=!has_item_" + d + ","
                }
                eval d += 1
            }
            
            eval selector = selector.substring(0, selector.length-1) + "]"
            
            var finalNbt = new nbt({display:{Lore:Lore},ae:{crafting_ui:true}})
            do if(recipe.out.itemTag != null) eval finalNbt = recipe.out.itemTag.merge(finalNbt)
            
            var command = "replaceitem entity " + selector + " enderchest." + slotNum + " " + recipe.out.itemType + finalNbt + " " + recipe.count
            /$command
        }
        
        for(;materialIndex >= 0; materialIndex -= 1) {
            /${"tag @s remove has_item_" + materialIndex}
        }
    }
    
    define function ${recipe.interaction} {
        unless entity @s[nbt=${new nbt({EnderItems:[{Slot:(tag_byte)slotNum, Count:(tag_byte) recipe.count}]})}] function {
            say detected interaction
            function ${recipe.validation}
            #if score AVAILABLE cc matches 1.. 
            say craft
            if entity @s[type=player,nbt={Inventory:[{tag:{ae:{crafting_ui:1b}}}]}] say shift-craft
            
            tag @s add update_inventory
            if score AVAILABLE cc matches 1.. tag @s add crafted
        }
    }
    
    eval recipeId += 1
    eval slotNum += 1
    do if(slotNum % 9 == 8) {
        eval slotNum += 2
    }
}

define function update_inventory {
    loot replace entity @s enderchest.0 mine ${DataBanks.Empty} $breakingTool
    
    var curPage = 0
    for(curPage = 0; curPage < instantiations.length; curPage += 1) {
        var pageInstantiation = (resource) ("aether:crafting/instantiate_pages/" + (string)curPage)
        define function ${pageInstantiation} {
            function aether:crafting/setup_page
            
            for(fn in instantiations[curPage]) {
                function $fn
            }
        }
        if score @s ct_page matches ${new int_range(curPage, curPage)} function $pageInstantiation
    }
}

define function check_interaction {
    var curPage = 0
    for(curPage = 0; curPage < interactions.length; curPage += 1) {
        var pageInteraction = (resource) ("aether:crafting/interact_pages/" + (string)curPage)
        define function ${pageInteraction} {
            for(fn in interactions[curPage]) {
                function $fn
            }
        }
        if score @s ct_page matches ${new int_range(curPage, curPage)} function $pageInteraction
    }
}

define entity default player {
    
    ticking function {
        if entity @s[scores={open_ct=1..}] function {
            tag @s add crafting_table_open
            function aether:crafting/update_inventory
            
            unless score @s ct_page isset set @s->ct_page = 0
        }
        
        if entity @s[tag=crafting_table_open] function {
            function aether:crafting/check_interaction
            if entity @s[tag=update_inventory] function aether:crafting/update_inventory
            set @s->op0 = @s.Rotation[0] * 10
            unless entity @s[scores={open_ct=1..}] unless score @s op0 = @s old_head_rot tag @s remove crafting_table_open
            set @s->old_head_rot = @s->op0
            title @s actionbar "crafting"
        }
        
        scoreboard players reset @s open_ct
        tag @s remove update_inventory
        tag @s remove crafted
        
        clear @s #all{ae:{crafting_ui:1b}}
    }
}
